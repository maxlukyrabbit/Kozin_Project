//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_development
{
    using System;
    using System.Collections.Generic;
    
    public partial class Task
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Task()
        {
            this.Comment = new HashSet<Comment>();
            this.Dependency = new HashSet<Dependency>();
            this.Dependency1 = new HashSet<Dependency>();
        }
    
        public int Id_Task { get; set; }
        public string Designation { get; set; }
        public string DescriptionTask { get; set; }
        public int Id_Developer { get; set; }
        public int Id_Tester { get; set; }
        public int Id_Creator { get; set; }
        public int IdPhase { get; set; }
        public int IdAssemblyType { get; set; }
        public int IdRelease { get; set; }
        public int IdPriority { get; set; }
        public int IdTypeOS { get; set; }
        public bool Access { get; set; }
    
        public virtual AssemblyType AssemblyType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Comment> Comment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Dependency> Dependency { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Dependency> Dependency1 { get; set; }
        public virtual Employee Employee { get; set; }
        public virtual Employee Employee1 { get; set; }
        public virtual Employee Employee2 { get; set; }
        public virtual Phase Phase { get; set; }
        public virtual Priority Priority { get; set; }
        public virtual Release Release { get; set; }
        public virtual TypeOS TypeOS { get; set; }
    }
}
